@page "/updateGame/{Id}"
@using Microsoft.AspNetCore.Components.Web
@using Models
@using Microsoft.AspNetCore.Components.Forms
@inject GameClient GameClient
@inject IToastService toastService
@using Mappings

[Parameter]
public int Id { get; set; }

<PageTitle>Update Game</PageTitle>

<h1 class="text-4xl">Update Game</h1>

<EditForm Model="game" OnValidSubmit="HandleValidSubmit">
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">Name</label>
        <InputText
            class="shadow appearance-none border rounded w-1/2  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="name" @bind-Value="game.Name" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="genre">Genre</label>
        <InputNumber
            class="shadow appearance-none border rounded w-1/2-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="genre" @bind-Value="game.GenreId" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="price">Price</label>
        <InputNumber
            class="shadow appearance-none border rounded w-1/2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="price" @bind-Value="game.Price" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="releaseDate">Release Date</label>
        <InputDate
            class="shadow appearance-none border rounded w-1/2 py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="releaseDate" @bind-Value="game.ReleaseDate" />
    </div>
    <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Update</button>
</EditForm>

@code {
    private Games game;

    protected override async Task OnInitializedAsync()
    {
        
        game = await GameClient.GetGameById(Id);
    }

    private async Task HandleValidSubmit()
    {
        await GameClient.UpdateGame(game);
        toastService.ShowToast("Game updated successfully!", "success");
    }
}