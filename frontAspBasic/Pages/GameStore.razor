@page "/games"
@using Microsoft.AspNetCore.Components.Web
@using Models
@inject NavigationManager NavigationManager
@inject GameClient GameClient
@inject IToastService ToastService

<PageTitle>Games Inventory</PageTitle>

<h1 class="text-4xl">Games inventory</h1>
Welcome to your new app.

@if (games == null)
{
  <p>Loading...</p>
}
else
{
  <div class="flex mb-4">
    <input type="text" @bind="filter" placeholder="Filter by name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
    <button @onclick="FilterGames" class="ml-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">Filter</button>
  </div>
  <table class="mt-2 table-auto w-full shadow-md rounded-lg">
    <thead>
      <tr class="bg-gray-100 text-gray-600 text-left font-medium">
        <th class="px-4 py-2">Id</th>
        <th class="px-4 py-2">Name</th>
        <th class="px-4 py-2">Genre</th>
        <th class="px-4 py-2">Price</th>
        <th class="px-4 py-2">Release Date</th>
        <th class="px-4 py-2">Actions</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var game in games)
      {
        <tr class="border-b border-gray-200 hover=bg-gray-100">
          <td class="px-4 py-2">@game.Id</td>
          <td class="px-4 py-2">@game.Name</td>
          <td class="px-4 py-2">@game.GenreId</td>
          <td class="px-4 py-2">@game.Price</td>
          <td class="px-4 py-2">@game.ReleaseDate</td>
          <td class="px-4 py-2 flex space-x-2">
            <button
              class="inline-flex items-center px-2 py-1 text-xs font-bold leading-none bg-red-100 hover=bg-red-200 rounded-full"
              @onclick="() => DeleteGame(game.Id)">
              <span>Delete</span>
            </button>
            <button
              class="inline-flex items-center px-2 py-1 text-xs font-bold leading-none bg-blue-100 hover=bg-blue-200 rounded-full"
              @onclick="() => NavigateToUpdateGame(game.Id)">
              <span>Update</span>
            </button>
          </td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private List<Games>? AllGames;
  private List<Games>? games;
  private string filter = "";

  protected override async Task OnInitializedAsync()
  {
    AllGames = await GameClient.GetAllGames();
    games = AllGames;
  }

  private void NavigateToUpdateGame(int gameId)
  {
    NavigationManager.NavigateTo($"/updateGame/{gameId}");
  }

  private async Task DeleteGame(int gameId)
  {
    await GameClient.DeleteGame(gameId);
    ToastService.ShowSuccess("Game deleted successfully");
    games = await GameClient.GetAllGames(); // Refresh the list after deletion
  }

  void FilterGames()
  {
    if (games != null && !string.IsNullOrEmpty(filter))
    {
      games = games.Where(game => game.Name.Contains(filter)).ToList();
    } else
    {
      games = AllGames;
    }
  }
}
