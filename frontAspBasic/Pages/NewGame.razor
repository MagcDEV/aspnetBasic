@page "/newGame"
@using Microsoft.AspNetCore.Components.Web
@using Models
@using Microsoft.AspNetCore.Components.Forms
@inject GameClient GameClient

<PageTitle>Create New Game</PageTitle>

<h1 class="text-4xl">Create New Game</h1>


<EditForm Model="newGame" OnValidSubmit="HandleValidSubmit">
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="name">Name</label>
        <InputText
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="name" @bind-Value="newGame.Name" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="genre">Genre</label>
        <InputNumber
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="genre" @bind-Value="newGame.GenreId" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="price">Price</label>
        <InputNumber
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="price" @bind-Value="newGame.Price" />
    </div>
    <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="releaseDate">Release Date</label>
        <InputDate
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="releaseDate" aria-placeholder="" @bind-Value="newGame.ReleaseDate" />
    </div>
    <button type="submit"
        class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
        Create Game
    </button>
</EditForm>

@code {
    private Games newGame = new Games
    {
        Name = string.Empty,
        GenreId = 0
    };

    private async Task HandleValidSubmit()
    {
        if (newGame != null)
        {
            await GameClient.CreateGame(newGame);
        }
        newGame = new Games
            {
                Name = string.Empty,
                GenreId = 0
            }; // Reset the form
        StateHasChanged(); // Force the component to re-render
    }
}